name: AWS Database Monitoring Deployment

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'prod' || 'test' }}

permissions:
  id-token: write
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r monitoring/lambda/requirements.txt
          
      - name: Run tests
        run: |
          pytest tests/unit/
          
  deploy-test:
    needs: validate
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: test
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Terraform Init
        run: |
          cd infra/terraform
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=test/terraform.tfstate"
            
      - name: Terraform Apply
        run: |
          cd infra/terraform
          terraform apply -var-file=environments/test.tfvars -auto-approve
          
      - name: Run Integration Tests
        env:
          DB_HOST: ${{ secrets.TEST_DB_HOST }}
          DB_USER: ${{ secrets.TEST_DB_USER }}
          DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
        run: |
          pytest tests/integration/

  deploy-prod:
    needs: [validate, deploy-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Terraform Init
        run: |
          cd infra/terraform
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=prod/terraform.tfstate"
            
      - name: Terraform Apply
        run: |
          cd infra/terraform
          terraform apply -var-file=environments/prod.tfvars -auto-approve
